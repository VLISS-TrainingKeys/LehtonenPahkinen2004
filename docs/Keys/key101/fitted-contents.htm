<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">


<HTML> 
<!-- Generated by SAS Software -->
<!-- Http://www.sas.com -->
<HEAD>
<META http-equiv="Content-type" content="text/html;  charset=windows-1252">
<TITLE>SAS Output Table of Contents</TITLE>
<STYLE TYPE="text/css">
<!-- 
/* Outline Style Sheet */
 
  UL { cursor: hand;
    list-style-type: decimal;}
 
  DL { cursor: hand;
    list-style-type: none;}
 
// so Netscape wont indent so far 
DL {marginLeft: -12pt}
 
SPAN {cursor: hand} 
 
 
.action { 
Color: #0033AA;
Font-Family: Arial, Helvetica, Helv;
Size: 3;
Font-weight: normal;
Font-style: roman;
}
 
-->
</STYLE>
 
 
<SCRIPT LANGUAGE="JavaScript">
<!-- 
// This script controls the expanding 
// and collapsing of lists in MSIE 4.0.
//
// Check for MSIE 4.0.
var msie4 = 0;
var ver = parseInt(navigator.appVersion);
if (navigator.userAgent.indexOf("MSIE") > -1 && ver >= 4){
  msie4 = 1;
  // Add style sheet info that screws up Netscape 4
  document.write('<STYLE TYPE="text/css"> UL DL { display:none; cursor: hand; list-style-type: none; margin-left: 10pt}  </STYLE>');
 
  // Set document events
  document.onclick = outline;
  document.onmouseover = doAction;
  document.onmouseout = undoAction;
 
  // Initialize expander
  var display_mode = "none"
 
  // Set images to use for folders
  var openImage = "";
  var closeImage = "";
 
  // Preload images so they're in the cache
  image1 = new Image ();
  image1.src = openImage;
  image2 = new Image ();
  image2.src = closeImage;
}
 
// Change folder to open or close as appropriate
function changeFolder(actionTag, tagPos) {
  // Check all tags encapsulated by the clicked tag
  while (actionTag.contains(document.all[tagPos])){
    // If a UL or DL is hit, bail out
    if (document.all[tagPos].tagName == "DL" || document.all[tagPos].tagName == "UL") return; 
 
    // If an image is hit, check for a folder and change as needed
    if (document.all[tagPos].tagName == "IMG"){
      // Check for closed folder
      if (document.all[tagPos].src.indexOf(closeImage) > -1){
        document.all[tagPos].src = openImage;
        break;
      }
      // Check for open folder
      else if (document.all[tagPos].src.indexOf(openImage) > -1){
        document.all[tagPos].src = closeImage;
        break;
      }
    }
    tagPos++;
    // If you reach the end of the document, bail out.
    if (tagPos >= document.all.length-1) return;
  }
}
 
// Source Code for Outlining
function checkParent(src) {
  // Search for a specific parent of the current element
  while (src != null) {
    // If an LI or DT is clicked, return src.  If not,
    //  look for at parent elements until you find
    //  one, and return it.
    if (src.tagName == "LI" || src.tagName == "DT") return src;
    src = src.parentElement;
  }
  // If there are no LIs or DTs in the current element or parent
  //  elements, return null.
  return null;
}
  
function outline() {     
  // Make sure clicked inside an LI or DT. 
  // This test allows rich HTML inside lists.
  var clickedElement = checkParent(event.srcElement);
 
  if (clickedElement != null) {
    // Get the position of the clicked HTML element
    var pos = clickedElement.sourceIndex+1;
 
    // Change folder image as necessary
    if (closeImage != '' && openImage != '') changeFolder(clickedElement, pos);
 
    // Starting at the first HTML element index after the 
    //  clicked element, look at every HTML element until
    //  another UL is found and break.
    while (clickedElement.contains(document.all[pos])){
      if (document.all[pos].tagName == "DL" || document.all[pos].tagName == "UL"){
        // If you get this far, toggle the display element of the tag
        toggleView(pos);
        break;
      }
  pos++;
      if (pos >= document.all.length-1) return;
    }
  }else{
    return;
  }
 
  event.cancelBubble = true;
}
 
function toggleView(pos){
  // Now that we've found the next UL, decide whether it 
  //  should be visible or hidden.
  if (document.all[pos].style.display == "" ||
      document.all[pos].style.display == "none") {
    document.all[pos].style.display = "block";
  }else{
    document.all[pos].style.display = "none";
  }
}
 
// Display action class when mouse is over SPAN
function doAction(){
  if (event.srcElement != null && event.srcElement.tagName == "SPAN"){
    event.srcElement.className = "action";
  }
}
 
// Display no class when mouse moves off of SPAN
function undoAction(){
  if (event.srcElement != null && event.srcElement.tagName == "SPAN"){
    event.srcElement.className = "";
  }
}
 
// Expand all lists and display all folders
function expandAll(level){
  display_mode = (display_mode == 'none') ? 'block' : 'none'
  setDisplay('DL', level)
  setDisplay('UL', level)
}
// Set the display to the proper mode.
// list_type is the tagname of the list to look at.  level
// is the maximum nest level to display/hide.
function setDisplay(list_type, level) {
  // If level is < 0 or undefined, expand/contract all lists.
  if (!level || level < 0) level = document.all.length
 
  for(i=0; i < document.all.tags(list_type).length; i++){
     level_count = 0
     object = document.all.tags(list_type)[i]
     pos = document.all.tags(list_type)[i].sourceIndex
     
     // Start at the current list object and work your way
     // out until we hit a body tag.  Keep track of all of the
     // lists we hit on the way out, so we know how deep we are.
     while (object.parentElement.tagName != 'BODY') {
        if (object.tagName == 'DL' || object.tagName == 'UL') 
           level_count++
        // If we're already nested too deep, break out.
        if (level_count > level) break
        object = object.parentElement
     }
     
     // If we are in legal range, change the display.
     if (level_count <= level && level_count > 1) {
        document.all[pos].style.display = display_mode  
      
        if (level_count != level && closeImage != '' && openImage != '') {
           object = document.all[++pos]    
 
           // Check for open/close folders to change.
           while (pos < document.all.length && object.tagName != 'IMG') {
              if (object.tagName == 'UL' || object.tagName == 'DL') 
                 break
              object = document.all[++pos]
           }
 
           // Change the image.
           if (pos < document.all.length && object.tagName == 'IMG' && 
               (object.src.indexOf(closeImage) > -1 ||
                object.src.indexOf(openImage)  > -1)) {
              if (!display_mode || display_mode == 'none')
                 object.src = closeImage
              else
                 object.src = openImage
           }
        }
     }
  }
}

//-->
</SCRIPT>
 
<STYLE TYPE="text/javascript">
<!--
  contextual(tags.UL, tags.DL).display = "block";
//-->
</STYLE>
</HEAD>
<BODY leftmargin=8 rightmargin=8 onload="if (msie4 == 1)expandAll()" bgcolor="#B0B0B0" vlink="#004488" link="#0066AA">
<font  face="Arial, Helvetica, Helv" size="3" color="#0033AA"><font  face="Arial, Helvetica, Helv" size="3" color="#002288"><i><SPAN onClick="if(msie4==1)expandAll()">Table of Contents</SPAN></i><p>
<i><img border="0" src="l1_sas_logo.gif" width="48" height="25">  <a href="../key106/fitted.htm" target="body">SAS PROGRAM CODE</a></p>
<p align="center"><font face="Arial"><a href="javascript:top.close()" target="_self">close window </a>
<HR size=3>
</font><ul><font  face="Arial, Helvetica, Helv" size="3" color="#002288"><li><SPAN><A HREF="../key106/fitted-body.htm#IDX" TARGET="body">Frame population</SPAN><br> 
 
</font></dl><br><font  face="Arial, Helvetica, Helv" size="3" color="#002288"><li><SPAN><A HREF="../key106/fitted-body.htm#IDX1" TARGET="body">Sample</SPAN><br> 

</font></dl><br><font  face="Arial, Helvetica, Helv" size="3" color="#002288"><li><SPAN><A HREF="../key106/fitted-body.htm#IDX2" TARGET="body">The Surveyreg

</font></dl></dl><br><font  face="Arial, Helvetica, Helv" size="3" color="#002288"><li><SPAN><A HREF="../key106/fitted-body.htm#IDX7" TARGET="body">Fitted values and total estimate  </SPAN><br> 
 
</font></dl></ul>
<br></font></BODY>
</HTML>
